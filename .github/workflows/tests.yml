name: Tests

on:
  push:
    branches:
      - "master"
  pull_request:

jobs:
  test:
    name: ruby-${{ matrix.ruby-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby-version: ['3.3.1']
      fail-fast: false

    env:
      RAILS_MASTER_KEY: "acf7c0d9c0f69afd05048c8a58b2e9ee"

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: dcim_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout main app
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          rubygems: "latest"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Set up Bundler
        run: |
          gem install bundler -v '~> 1.0'

      - name: Install Ruby dependencies
        run: |
          bundle install --jobs=4 --retry=3 --without development

      - name: Set up Database
        env:
          RAILS_ENV: test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        run: |
          cp test/support/database-postgres.yml config/database.yml
          bundle exec rails db:setup

      - name: Run tests
        env:
          RAILS_ENV: test
        run: bundle exec rails test

      - name: Run RSpec tests
        env:
          RAILS_ENV: test
        run: bin/rspec

      - name: Rubocop
        run: bin/rubocop
