<%
  breadcrumb
    .add(Modele.model_name.human.pluralize, modeles_path)
    .add(@modele.name)
%>

<%= render Page::HeadingShowComponent.new(resource: @modele, title: @modele, breadcrumb:) do |heading| %>
  <% heading.with_extra_buttons do %>
    <% render ButtonComponent.new(t("action.duplicate"),
                                  url: duplicate_modele_path(@modele),
                                  variant: :success,
                                  icon: "copy",
                                  is_responsive: true,
                                  extra_classes: "me-2") %>
  <% end %>
<% end %>

<div class="col-12 p-4 border-top">
  <div class="row row-cols-1 row-cols-lg-2 row-gap-4">
    <div class="col">
      <%= render CardComponent.new do |card| %>
        <dl class="show-page_dl d-grid row-gap-2 mb-0">
          <% card.with_header do %>
            <%= t("show.cards.identification") %>
          <% end %>

          <% %i[name].each do |attribute_name| %>
            <dt class="pb-2"><%= Modele.human_attribute_name(attribute_name) %></dt>
            <dd class="mb-0 pb-2 ps-3"><%= @modele.public_send(attribute_name) %></dd>
          <% end %>
        </dl>
      <% end %>

      <%= render CardComponent.new(extra_classes: "mt-4") do |card| %>
        <% card.with_header do %>
          <%= t("show.cards.features") %>
        <% end %>

        <dl class="show-page_dl d-grid row-gap-2 mb-0">
          <% %i[category architecture u manufacturer nb_elts color].each do |attribute_name| %>
            <dt class="pb-2"><%= Modele.human_attribute_name(attribute_name) %></dt>
            <dd class="mb-0 pb-2 ps-3"><%= @modele.public_send(attribute_name) %></dd>
          <% end %>

          <dt class="pb-2"><%= Modele.human_attribute_name(:network_types) %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= @modele.decorated.network_types_to_human %></dd>
        </dl>
      <% end %>
    </div>
    <div class="col">
      <%= render CardComponent.new do |card| %>
        <% card.with_header do %>
          <%= t("show.cards.preview") %>
        <% end %>

        <%= render partial: "visualization", locals: { modele: @modele } %>
      <% end %>
    </div>
  </div>
  <%= render HasManyTurboFrameComponent.new(
    Server.model_name.human(count: 2), url: servers_path(modele_ids: @modele.id), frame_id: dom_id(Server, :table)
  ) %>
  <%= render ChangelogEntries::ObjectListComponent.new(@modele) %>
</div>
