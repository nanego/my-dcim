<fieldset class="col-sm-10 col-md-4">
  <div class="panel panel-default enclosure-fields">
    <div class="panel-heading">
      <%= f.object.position.present? ? t(".enclosure_position", position: f.object.position) : t(".new_enclosure") %>
      <span class="pull-right">
        <%= f.hidden_field :_destroy %>
        <%= link_to t("action.delete"), '#', class: "remove_fields" %>
      </span>
    </div>
    <ul id="enclosureList_<%= f.object.id %>" class="list-group panel-body">
      <div class="list-group-item filtered">
        <fieldset>
          <%= f.label :display %> :
          <%= f.select :display, options_for_select([:vertical, :horizontal, :grid], f.object.display) %>
        </fieldset>
      </div>
      <div class="list-group-item filtered">
        <fieldset>
          <%= f.label :grid_areas %>
          <%= f.text_area :grid_areas, style: "font-family: monospace;width: 100%; height: 110px;" %>
        </fieldset>
      </div>
      <%= f.fields_for :composants, f.object.composants.slots do |builder| %>
        <%= render "composant_fields", :f => builder, :type_composant => 'SLOT' %>
      <% end %>
    </ul>
    <div class="panel-footer"><%= link_to_add_fields_with_prefilled_data "<span class='bi bi-plus-lg' aria-hidden='true'></span> #{t(".add_slot")}".html_safe, f, :composants, 'SLOT' %></div>
  </div>
</fieldset>
<script>
    var display_select = $('#modele_enclosures_attributes_<%= f.object.position.to_i - 1 %>_display')
    var grid_text_area = $('#modele_enclosures_attributes_<%= f.object.position.to_i - 1 %>_grid_areas').closest('.list-group-item')
    var toggle_grid_text_area = (function f() {
        var val = display_select.val()
        grid_text_area.hide()
        if (val == "grid") {
            grid_text_area.show()
        }
        return f
    })()
    display_select.change(function () {
        toggle_grid_text_area()
    })

    Sortable.create(enclosureList_<%= f.object.id %>, {
      handle: '.bi-arrows-vertical',
      animation: 150,
      filter: '.fitlered',
      onEnd: function (evt) {
        evt.to.querySelectorAll('li.composant').forEach((item, index) => {
          item.querySelector("input[name*='[position]']").value = index + 1
        });
      }
    });
</script>
