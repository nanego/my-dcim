<% provide :title, t("rooms.capacity_view.title") %>

<%= render 'layouts/breadcrumb',
           breadcrumb_variables: {
             t("visualization") => overview_rooms_path,
             t("rooms.capacity_view.title") => nil } %>

<div class="container-fluid room_overview show_room rooms-network-capacity" id="network-capacity">
  <div class="panel panel-default">
    <div class="panel-body" style="display: flex;">
      <ul class="list-unstyled col-xs-2 hidden-sm menu-rooms">
        <div class="btn-group btn-toggle">
          <% Modele::Network::TYPES.each do |type| %>
            <button class="<%= class_names("btn", "btn-primary active": (type == "gbe"), "btn-default": (type != "gbe")) %>" data-toggle="tab" role="tab" data-network="<%= type %>">
              <%= Modele.human_attribute_name("network_types.short_#{type}") %>
            </button>
          <% end %>
        </div>
        <li class="divider" style="border-bottom: 1px lightgray solid;margin:10px -10px 8px -10px;"></li>

        <% @sites.each do |site| %>
          <li><%= site %></li>
          <ul>
            <% rooms = site.rooms.sorted.distinct %>
            <% rooms.each do |room| %>
              <% islets = room.islets.sorted.not_empty.has_name.distinct %>
              <% islets.each do |islet| %>
                <li role="presentation" class="<%= 'active' if islet == @islet %>">
                  <% if islets.size <= 1 %>
                    <a href="#<%= room.id %>-<%= islet %>-gbe"
                       onclick="rewriteURL('/rooms/capacity', {'room': '<%= room.slug %>', 'islet': ''})"
                       aria-controls="room-<%= room %>"
                       role="tab"
                       class="tab"
                       data-toggle="tab"
                       data-room-id="<%= room.id %>"
                       data-islet="<%= islet.name %>">
                      <%= room.name %>
                    </a>
                  <% else %>
                    <a href="#<%= room.id %>-<%= islet %>-gbe"
                       onclick="rewriteURL('/rooms/capacity', {'room': '<%= room.slug %>', 'islet': '<%= islet.name %>'})"
                       aria-controls="islet-<%= islet %>"
                       role="tab"
                       class="tab"
                       data-toggle="tab"
                       data-room-id="<%= room.id %>"
                       data-islet="<%= islet.name %>">
                      <%= room.name %> Ilot <%= islet.name %>
                    </a>
                  <% end %>
                </li>
              <% end %>
              <% if islets.empty? %>
                <li><%= room.name %></li>
              <% end %>
            <% end %>
          </ul>
        <% end %>
      </ul>

      <div class="tab-content col-xs-10 capacity">
        <% @sites.each do |site| %>
          <% site.rooms.each do |room| %>
            <% room.islets.sorted.each do |islet| %>
              <% Modele::Network::TYPES.each do |network| %>
                <div class="islet tab-pane <%= 'in active' if network == "gbe" && (islet == @islet || (@islet.blank? && @room == room)) %>"
                     role="tabpanel"
                     id="<%= room.id %>-<%= islet %>-<%= network %>">
                  <div>
                    <div class="rooms-overview">
                      <% islet.bays.sorted.each do |bay| %>
                        <% frames = bay.frames.sorted %>
                        <% if frames.any? %>
                          <div class="couple" style="grid-column: <%= "#{bay.position}/#{bay.position+1}" %>;
                            grid-row: <%= "#{bay.lane.to_i}/#{bay.lane.to_i+1}" %>;">
                            <% frames.each_with_index do |frame, index| %>
                              <% servers = Rails.cache.fetch(["frame", "servers", frame.id, frame.updated_at, network, @servers_last_update_time, @ports_last_update_time]) do
                                frame.servers.includes(:bay, :stack,
                                                       :modele => { :enclosures => :composants },
                                                       :cards => [{ :card_type => :port_type }, { :ports => :cable }])
                                     .where("servers.network_types @> ?", "{#{network}}") # Switch LAN
                              end %>
                              <div class="overviewed_frame <%= 'no-margin' if index > 0 %>"
                                   data-bay-id="<%= bay.id %>" data-frame-id="<%= frame.id %>">
                                <div class="title">
                                  <%= link_to frame.name, room_path(room,
                                                                    view: params[:view],
                                                                    islet: islet.name,
                                                                    'bay-id': bay.id,
                                                                    'frame-id': frame) %>
                                </div>
                                <ul>
                                  <% servers.each do |server| %>
                                    <% cache ["server", server.id, server.updated_at.to_s, @ports_last_update_time] do %>
                                      <% data = { :url => server_url(server) } %>
                                      <%= tag.li class: "server_#{server.id}
                                                     lane-#{server.bay.lane}
                                                     truncate
                                                     #{"bordered" if server != servers.last}",
                                                 title: h("#{server.name}"),
                                                 data: data do %>
                                        <% if server.modele.present? %>
                                          <% server.modele.enclosures.each do |enclosure| %>
                                            <% cards = server.cards %>
                                            <% components_per_enclosure = enclosure.composants.reject { |c| c.name&.downcase == "alim" } %>
                                            <% if enclosure.display != 'horizontal' %>
                                              <table>
                                                <tr>
                                                  <% components_per_enclosure.each do |component| %>
                                                    <td class="slot_column" style="border: none;">
                                                      <% cards.select { |card| card.composant_id == component.id }.each do |card| %>
                                                        <%= render partial: 'rooms/capacity_component', locals: { server: server, component: component, card: card } %>
                                                      <% end %>
                                                    </td>
                                                  <% end %>
                                                </tr>
                                              </table>
                                              <span class="sum">
                                              <%= cards.sum { |c| c.cables.size } %> /
                                                <%= cards.sum { |c| c.port_quantity } %>
                                            </span>
                                            <% else %>
                                              <% components_per_enclosure.each do |component| %>
                                                <% cards.select { |card| card.composant_id == component.id }.each do |card| %>
                                                  <%= render partial: 'rooms/capacity_component', locals: { server: server, component: component, card: card } %>
                                                  <span class="sum">
                                                  <%= card.cables.size %> /
                                                    <%= card.port_quantity %>
                                                </span>
                                                <% end %>
                                              <% end %>
                                            <% end %>
                                          <% end %>
                                          <%= link_to h(server.name),
                                                      server_path(server, :view => params[:view]),
                                                      { class: 'pull-right server_name', :data => { 'toggle': "tooltip", 'placement': "top" }, title: server.numero } %>
                                        <% end %>
                                      <% end %>
                                    <% end %>
                                  <% end %>
                                </ul>
                              </div>
                            <% end %>
                          </div>
                        <% end %>
                      <% end %>
                    </div>
                  </div>
                </div>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
  var current_room_id = "<%= @room&.id.to_s %>"
  var current_islet = "<%= @islet&.name.to_s %>"

  $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
    // log(e.target.dataset)
    current_room_id = e.target.dataset['roomId']
    current_islet = e.target.dataset['islet']
    // log(current_room_id)
    // log(current_islet)
  })

  // Network switcher
  $('.btn-toggle .btn').click(function (e) {
    e.preventDefault()

    // Update network switcher
    var selected_btn = $(this)
    var selected_network = selected_btn.data('network')
    var btn_group = selected_btn.parent('.btn-group')
    var previous_network =  btn_group.find('.btn.active').data('network')
    btn_group.find('.btn').removeClass('active')
    btn_group.find('.btn').removeClass('btn-primary')
    btn_group.find('.btn').addClass('btn-default')
    btn_group.find(".btn[data-network='" + selected_network + "']").addClass('active')
    btn_group.find(".btn[data-network='" + selected_network + "']").addClass('btn-primary')

    // Update all tabs links with newly selected network AND show this network
    var current_tab = $('.show_room li.active a.tab:first')
    var tabs = $('.show_room li a.tab')
    tabs.each(function () {
      $(this).prop("href", $(this).attr('href').slice(0, -(previous_network.length + 1)) + "-" + btn_group.find('.btn.active').data("network"))
      $(this).parent('li').removeClass('active')
    })
    current_tab.tab('show')
  })

  // Room selection
  $('.show_room li a.tab').click(function (e) {
    e.preventDefault()
    var tabs = $('.show_room li a.tab')
    tabs.each(function () { // Remove all active class
      $(this).parent('li').removeClass('active')
    })
    $(this).tab('show')
  })

</script>
