<% bg = params[:bg].presence || current_user.visualization_bay_default_background_color %>
<% view = params[:view].presence || current_user.visualization_bay_default_orientation %>
<% provide :title, "#{t("visualization.title")} | Salle #{@room.name} #{@islet ? "- Ilot #{@islet}" : "" }" %>
<% hide_inventories_sidebar! %>

<%= render "layouts/breadcrumb",  breadcrumb_steps: {
  t("visualization.title") => overview_rooms_path,
  "#{@room.name} #{@islet ? " Ilot #{@islet}" : "" }" => "",
} %>

<% server_height = 2.5 %>

<div class="container-fluid room_overview show_room" id="full-overview">
  <div class="card mb-3" style="min-height: 55px;">
    <div id="collapseRoomOverviewCardBody" class="collapse show">
      <div class="card-body d-flex justify-content-between">
        <div class="d-none d-md-block rounded-start-1 bg-body-secondary p-3 m-0 border-end">
          <ul class="list-unstyled menu-rooms flex-column nav" role="tablist" id="roomsTab">
            <% @sites.each do |site| %>
              <li><%= site %></li>
              <ul>
                <% rooms = site.rooms.sorted.distinct %>
                <% rooms.each do |room| %>
                  <% islets = room.islets.sorted.not_empty.has_name.distinct %>
                  <% islets.each do |islet| %>
                    <%- is_current_islet_active = islet == @islet || (@islet.blank? && @room == room) %>
                    <li role="presentation" class="<%= class_names(active: is_current_islet_active) %>">
                      <% if islets.size == 1 %>
                        <a href="#tab-<%= room.id %>" onclick="rewriteURL('/rooms/<%= room.slug %>', {'islet': ''})" aria-controls="room-<%= room %>" role="tab" data-bs-toggle="tab" data-bs-target="#tab-<%= room.id %>" class="<%= "active" if is_current_islet_active %>">
                          <%= room.name %>
                        </a>
                      <% else %>
                        <a href="#tab-<%= room.id %>-<%= islet %>" onclick="rewriteURL('/rooms/<%= room.slug %>', {'islet': '<%= islet.name %>'})" aria-controls="islet-<%= islet %>" role="tab" data-bs-toggle="tab" data-bs-target="#tab-<%= room.id %>-<%= islet %>" class="<%= "active" if is_current_islet_active %>">
                          <%= room.name %> Ilot <%= islet.name %>
                        </a>
                      <% end %>
                    </li>
                  <% end %>
                  <% if islets.empty? %>
                    <li><%= room.name %></li>
                  <% end %>
                <% end %>
              </ul>
            <% end %>
          </ul>
          <hr />
          <div>
            <button type="button" class="btn btn-sm btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <%= t("rooms.action_buttons.background_color", bg: t("rooms.action_buttons.background_choices.#{bg || User::AVAILABLE_BAY_BACKGROUND_COLORS[0]}")) %>
            </button>
            <ul class="dropdown-menu">
              <li><%= link_to Modele.model_name.human,
                              url_for(params.except(:controller, :action)
                                            .permit(:view, :islet, :id, :bg, :format)
                                            .merge({ view: "front", bg: "modele", islet: params[:islet], id: params[:id] })),
                              class: "dropdown-item" %></li>
              <li><%= link_to Gestion.model_name.human,
                              url_for(params.except(:controller, :action)
                                            .permit(:view, :islet, :id, :bg, :format)
                                            .merge({ view: "front", bg: "gestionnaire", islet: params[:islet], id: params[:id] })),
                              class: "dropdown-item" %></li>
              <li><%= link_to Cluster.model_name.human,
                              url_for(params.except(:controller, :action)
                                            .permit(:view, :islet, :id, :bg, :format)
                                            .merge({ view: "front", bg: "cluster", islet: params[:islet], id: params[:id] })),
                              class: "dropdown-item" %></li>
            </ul>
          </div>
        </div>
        <div class="tab-content bg-body overflow-auto p-3 m-auto" id="roomsTabContent">
          <% @sites.each do |site| %>
            <% site.rooms.each do |room| %>
              <% room.islets.sorted.each do |islet| %>
                <div class="islet overflow-auto tab-pane fade <%= "show active" if islet == @islet || (@islet.blank? && @room == room) %>"
                    role="tabpanel"
                    id="tab-<%= room.id %><%= "-#{islet}" if room.islets.size > 1 %>">
                  <div class="rooms-overview">
                    <% islet.bays.sorted.each do |bay| %>
                      <% air_conditioner = @air_conditioners.find { _1.bay_id == bay.id } || nil %>
                      <div class="couple d-flex"
                          style="grid-column: <%= "#{bay.position}/#{bay.position+1}" %>;
                                 grid-row: <%= "#{bay.lane.to_i}/#{bay.lane.to_i+1}" %>;">
                        <% if air_conditioner&.position == AirConditioner.positions[:left] %>
                          <%= render "air_conditioner", air_conditioner: %>
                        <% end %>
                        <% bay.frames.sorted.each_with_index do |frame, index| %>
                          <div class="<%= class_names("overviewed_frame border",
                                                      "no-margin": index > 0,
                                                      highlighted: @frames && @frames.include?(frame)) %>"
                              data-bay-id="<%= bay.id %>" data-frame-id="<%= frame.slug %>">
                            <div class="title">
                              <%= link_to frame.name, frame_path(frame, view: (params[:view])), data: { 'frame-id': frame.slug } %>
                            </div>
                            <ul>
                              <% u_disponibles = frame.u || 41 %>
                              <% servers = @servers_per_frames[room.id][islet.name][bay.lane][bay][frame] %>
                              <% servers.each do |server| %>
                                <% while server.position.present? && server.position < u_disponibles && u_disponibles > 0 %>
                                  <li class="server truncate" style='height: <%= server_height %>px;background-color:white;' data-num-u="<%= u_disponibles %>"/>
                                  <% u_disponibles -= 1 %>
                                <% end %>

                                <% bgModeleColor = define_background_color(server: server, mode: bg) %>
                                <% u_server = server.modele.try(:u).to_i > 0 ? server.modele.u : 1 %>
                                <% data = { u: u_server,
                                            num_u: u_disponibles,
                                            rj45_futur: server.try(:rj45_futur) || 0,
                                            fc_futur: server.try(:fc_futur) } %>
                                <%= content_tag_for :li, server,
                                                    class: "server truncate #{server.modele.try(:category).try(:name).try(:parameterize)} #{server.server_state_id == 1 ? 'striped' : ''}",
                                                    style: "height: #{server_height * u_server}px;background-color:#{bgModeleColor} !important;",
                                                    title: h("#{server.name}"),
                                                    data: data do %>
                                  <% u_disponibles -= u_server %>
                                <% end %>
                              <% end %>
                              <% u_disponibles.times do |u| %>
                                <li class="server truncate" style='height: <%= server_height %>px;background-color:white;' data-num-u="<%= u_disponibles %>"/>
                                <% u_disponibles -= 1 %>
                              <% end %>
                            </ul>
                          </div>
                        <% end %>

                        <% if air_conditioner&.position == AirConditioner.positions[:right] %>
                          <%= render "air_conditioner", air_conditioner: %>
                        <% end %>
                      </div>
                    <% end %>
                  </div>
                </div>
              <% end %>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
    <span class="position-absolute bottom-0 end-0 m-2" data-controller="reveal" data-reveal-hidden-class="d-none">
      <button type="button" class="btn"
                            data-bs-toggle="collapse"
                            data-bs-target="#collapseRoomOverviewCardBody"
                            aria-expanded="false"
                            aria-controls="collapseRoomOverviewCardBody"
                            data-action="click->reveal#toggle">
        <span class="bi bi-arrows-collapse" aria-hidden="true" data-reveal-target="item"></span>
        <span class="bi bi-arrows-expand d-none" aria-hidden="true" data-reveal-target="item"></span>
      </button>
    </span>
  </div>
</div>
<div class="container-fluid" id="bay-container"></div>
<%= render "ports/modal_edit_port" %>

<script>
(function () {
    var searchParams = new URLSearchParams(window.location.search)
    var bay_id = searchParams.get('bay-id')
    var frame_id = searchParams.get('frame-id')
    if (frame_id) {
        loadFrame(frame_id, bay_id, "")
    } else {
        if (bay_id) {
            loadBay(bay_id)
        }
    }

    // Update Breadcrumb and switch li active state, after click on a Room Selection
    document.getElementById("roomsTab").querySelectorAll("a")
                                       .forEach(element => element.addEventListener("click", menuRoomsClick))
})();

$(".show_room .overviewed_frame").hover(
  function () {
    $(this).closest('.couple').find(".overviewed_frame").addClass("hover")
  }, function () {
    $(this).closest('.couple').find(".overviewed_frame").removeClass("hover")
  }
);
$(".show_room .overviewed_frame").on('click', function (e) {
  e.preventDefault()

  if(e.target.tagName!='A') {
    loadBay($(this).data('bay-id'))
  }
})
$(".show_room .overviewed_frame .title a").on('click', function (e) {
  e.preventDefault()

  loadFrame($(this).data('frame-id'), $(this).data('bay-id'), $(this).text())
})

// Update Breadcrumb after click on a Room Selection
function menuRoomsClick(e) {
  e.preventDefault()

  let breadcrumb = document.querySelector("ol.breadcrumb")

  // all tabs inactive
  document.getElementById("roomsTab").querySelectorAll("li").forEach((elt) => elt.classList.remove("active"))
  document.getElementById("roomsTab").querySelectorAll("li a").forEach((elt) => elt.classList.remove("active"))
  document.getElementById("roomsTabContent").querySelectorAll("div.islet").forEach((elt) => elt.classList.remove("active", "show"))

  // Switch active state on li
  bootstrap.Tab.getOrCreateInstance(e.target).show()
  e.target.parentNode.classList.add("active")

  // Update Room
  breadcrumb.lastElementChild.textContent = e.target.textContent
}

function loadBay(bay_id) {
  $('#bay-container').html('<div class="animationload"><div class="osahanloading"></div>Chargement de la baie</div>')
  if (typeof delete_all_lines === "function") {
    delete_all_lines()
  }

  $('.couple .overviewed_frame').removeClass('selected')
  $('.couple .overviewed_frame[data-bay-id='+bay_id+']').addClass('selected')

  $.ajax({
    method: "GET",
    url: "/bays/" + bay_id + ".js",
    data: { bay_id: bay_id, view: "<%= view %>", bg: "<%= bg %>" }
  });
}

function loadFrame(frame_id, bay_id, frame_title) {
  $('#bay-container').html('<div class="animationload"><div class="osahanloading"></div>Chargement de la baie '+frame_title+'</div>')
  if (typeof delete_all_lines === "function") {
    delete_all_lines()
  }

  $('.couple .overviewed_frame').removeClass('selected')
  $('.couple .overviewed_frame[data-frame-id='+frame_id+']').addClass('selected')

  const searchParams = new URLSearchParams(window.location.search)
  let view = 'front'

  if (searchParams.has('view')) {
    view = searchParams.get('view')
  } else {
    searchParams.set('view', view)
  }
  // searchParams.set('bay-id', bay_id)
  // searchParams.set('frame-id', frame_id)
  // window.history.replaceState({}, '', location.pathname + '?' + searchParams);

  $.ajax({
    method: "GET",
    url: "/frames/" + frame_id + ".js",
    data: { frame_id: frame_id, view: view, bg: searchParams.get('bg') }
  });
}
</script>
