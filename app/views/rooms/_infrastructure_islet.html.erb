<div class="<%= class_names("islet tab-pane",
                            "active": network == "gbe" && (islet == @islet || (@islet.blank? && @room == room))) %>"
     role="tabpanel"
     id="tab-<%= room.id %>-<%= islet %>-<%= network %>">
  <% if room.id == 4 || room.id == 3 %>
    <% second_room_id = room.id == 4 ? 3 : 4 %>
    <div class="hubs">
      <% bgColorHub1 = define_background_color(server: @hubs[network][room.id], mode: params["bg"]) %>
      <div class="hub_material hub-top server_<%= @hubs[network][room.id].id %>"
           id="hub1-<%= room.id %>-<%= islet %>"
           style="background-color: <%= bgColorHub1 %>"
           data-url="<%= server_path(@hubs[network][room.id]) %>">
        <%= link_to server_path(@hubs[network][room.id]), class: "link-dark", target: :_blank, rel: :noopener do %>
          Concentrateur
          <br>
          <%= @hubs[network][room.id] %>
        <% end %>
      </div>
      <div class="other_room_hub">
        <% bgColorHub2 = define_background_color(server: @hubs[network][second_room_id], mode: params["bg"]) %>
        <span style="color: grey;"><%= Room.find(second_room_id) %></span>
        <div class="hub_material hub-bottom ms-1 server_<%= @hubs[network][second_room_id].id %>"
             data-url="<%= server_path(@hubs[network][second_room_id]) %>"
             style="background-color: <%= bgColorHub2 %>"
             id="hub2-<%= room.id %>-<%= islet %>">
          <%= link_to server_path(@hubs[network][second_room_id]), class: "link-dark",
                                                                   target: :_blank, rel: :noopener do %>
            Concentrateur
            <br>
            <%= @hubs[network][second_room_id] %>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
  <div>
    <div class="rooms-overview">
      <% islet.bays.sorted.each do |bay| %>
        <div class="couple" style="grid-column: <%= "#{bay.position}/#{bay.position+1}" %>;
            grid-row: <%= "#{bay.lane.to_i}/#{bay.lane.to_i+1}" %>;">
          <% bay.frames.sorted.each_with_index do |frame, index| %>
            <% servers = frame.servers.includes(:bay, :modele, :stack)
                              .where("servers.network_types @> ?", "{#{network}}") # Switch LAN %>
            <div class="<%= class_names("overviewed_frame bg-secondary-subtle border-secondary-subtle border",
                                        "no-margin": index > 0) %>"
                 data-bay-id="<%= bay.id %>" data-frame-id="<%= frame.id %>">
              <div id="frame-<%= frame.id %>-pre"
                   class="<%= class_names("intermediate-point pre", even: bay.lane.to_i.even?,
                                                                    odd: bay.lane.to_i.odd?) %>"
                   style="z-index: -3000;">.</div>
              <div class="title">
                <%= link_to frame.name, room_path(@room,
                                                  view: params[:view],
                                                  islet: islet.name,
                                                  "bay-id": bay.id,
                                                  "frame-id": frame,
                                                  bg: params[:bg]),
                                        class: "link-body-emphasis" %>
              </div>
              <div id="frame-<%= frame.id %>-post"
                   class="<%= class_names("intermediate-point post", even: bay.lane.to_i.even?,
                                                                     odd: bay.lane.to_i.odd?) %>"
                   style="z-index: -3000;">.</div>
              <ul>
                <% servers.each do |server| %>
                <% bgModeleColor = define_background_color(server: server, mode: params["bg"]) %>
                  <% data = { url: server_url(server) } %>
                  <%= tag.li class: class_names("server_#{server.id} lane-#{server.bay.lane} truncate",
                                                bordered: server != servers.last),
                             style: "direction:rtl;background-color:#{bgModeleColor} !important;
                                     #{"border: 2px solid ##{server.stack.color};" if server.stack.present?}",
                             title: h("#{server.name}"),
                             data: data do
                    link_to server.name, server_path(server), class: "link-dark",
                                                              target: :_blank, rel: :noopener
                  end %>
                <% end %>
              </ul>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>
