<% title = "#{@server.modele.try(:category).try(:name)} #{@server.name}" %>
<% provide(:title, "#{t("servers.index.title")} | #{title}") %>

<% breadcrumb_steps = {
  t("servers.index.title") => servers_path,
  @server.name => ""
} %>

<%= render Page::HeadingShowComponent.new(resource: @server, title: title, breadcrumb_steps:) do |c| %>
  <% c.with_extra_buttons do %>
    <% render ButtonComponent.new(title: t("action.duplicate"),
                                  url: duplicate_server_path(@server.slug),
                                  variant: :success,
                                  icon: "copy",
                                  is_responsive: true,
                                  extra_classes: "me-2") %>
  <% end %>
<% end %>

<div class="col-12 p-4 border-top">
  <div class="mb-4">
    <% bgModeleColor = define_background_color(server: @server, mode: params["bg"]) %>
    <div class="<%= class_names("rounded-top-1 border border-secondary-subtle p-2 mb-2",
                                colorized_background: bgModeleColor.present?) %>"
          style="background-color:<%= bgModeleColor %> !important;">
      <%= render partial: "draw_server_compact_front", locals: { server: @server } %>
    </div>

    <div class="rounded-bottom-1 bg-body border border-secondary-subtle p-2 mb-2">
      <span id="back_server_<%= @server.id %>" class="no-decoration-link d-flex flex-row-reverse flex-wrap">
          <%= render partial: "servers/draw_server_compact", locals: { server: @server } %>
      </span>
    </div>
  </div>

  <% if @server.comment.present? %>
    <div class="mb-4">
      <div class="alert alert-warning">
        <%= @server.comment %>
      </div>
    </div>
  <% end %>

  <div class="d-flex flex-row flex-wrap">
    <div class="col-12 col-lg-6 pe-lg-4">
      <%= render CardComponent.new(extra_classes: "mb-4 mb-lg-0") do |card| %>
        <dl class="show-page_dl d-grid row-gap-2 mb-0">
          <dt class="pb-2"><%= Bay.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= link_to @server.frame.try(:name), frame_path(@server.frame) %></dd>

          <dt class="pb-2"><%= Islet.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= link_to @server.islet, islet_path(@server.islet) %></dd>

          <dt class="pb-2"><%= Room.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= link_to @server.room.try(:name), @server.room %></dd>

          <dt class="pb-2"><%= Category.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= @server.modele.try(:category) %></dd>

          <dt class="pb-2"><%= Modele.human_attribute_name(:nb_elts) %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= @server.modele.try(:nb_elts) %></dd>

          <dt class="pb-2"><%= Architecture.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <%= link_to @server.modele.try(:architecture), architecture_path(@server.modele.try(:architecture)) %>
          </dd>

          <dt class="pb-2"><%= t(".nb_u") %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= @server.modele.try(:u) %></dd>

          <dt class="pb-2"><%= Server.human_attribute_name(:position) %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= @server.position %></dd>

          <dt class="pb-2"><%= Manufacturer.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <%= link_to @server.modele.try(:manufacturer), manufacturer_path(@server.modele.try(:manufacturer)) %>
            <% if (documentation_url = @server.documentation_url).present? %>
              (
                <%= link_to t(".documentation"), documentation_url, target: :_blank, rel: :noopener %>
              )
            <% end %>
          </dd>

          <dt class="pb-2"><%= Modele.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <%= link_to @server.modele, edit_modele_path(@server.modele) if @server.modele.try(:name) %>
          </dd>

          <dt class="pb-2"><%= Server.human_attribute_name(:numero) %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= @server.try(:numero) %></dd>

          <dt class="pb-2"><%= Cluster.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= link_to_if @server.cluster, @server.cluster&.name, @server.cluster %></dd>

          <dt class="pb-2"><%= Server.human_attribute_name(:critique) %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <span class="<%= class_names("text-uppercase text-danger": @server.critique) %>">
              <%= t("boolean.#{@server.critique}") %>
            </span>
          </dd>

          <dt class="pb-2"><%= Domaine.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= link_to_if @server.domaine, @server.domaine %></dd>

          <dt class="pb-2"><%= Gestion.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= link_to_if @server.gestion, @server.gestion %></dd>

          <dt class="pb-2"><%= ServerState.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3"><%= @server.server_state %></dd>

          <dt class="pb-2"><%= Stack.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <% if @server.stack %>
              <%= link_to stack_path(@server.stack) do %>
                <span style="<%= "color: ##{@server.stack.color}" %>" class="bi bi-square-fill" aria-hidden="true"></span>
              <% end %>
            <% end %>
          </dd>

          <dt class="pb-2"><%= Card.model_name.human.pluralize %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <% @server.modele.composants.slots.each do |slot| %>
              <% @server.cards.where(:composant_id => slot.id).each do |card| %>
                <div>
                  <%= card.composant.name ? card.composant.name : card.composant.position %>
                  :
                  <%= "#{card.card_type.try(:name)} (#{card.card_type.try(:port_quantity)}#{card.card_type.try(:port_type).try(:name)})" %>
                </div>
              <% end %>
            <% end if @server.modele.present? %>
          </dd>

          <dt class="pb-2"><%= Disk.model_name.human.pluralize %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <% @server.disks.each do |disk| %>
              <div><%= disk %></div>
            <% end %>
          </dd>

          <dt class="pb-2"><%= MemoryComponent.model_name.human %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <% @server.memory_components.each do |memory_component| %>
              <span><%= memory_component %></span>
            <% end %>
          </dd>

          <dt class="pb-2"><%= Server.human_attribute_name(:network_types) %></dt>
          <dd class="mb-0 pb-2 ps-3">
            <%= @server.network_types.map { |type| Modele.human_attribute_name("network_types.#{type}") }.join(", ") %>
          </dd>
        </dl>
      <% end %>
    </div>

    <div class="col-12 col-lg-6">
      <div class="col-12">
        <% if @server.photo.attached? %>
          <%= render CardComponent.new(extra_classes: "mb-4") do |card| %>
            <% card.with_header do %>
              <%= Server.human_attribute_name(:photo) %>
            <% end %>

            <%= image_tag @server.photo.variant(geometry: "x220"), class: "server_photo ms-0 mb-3" %>
          <% end %>
        <% end %>
        <% if @server.documents.present? %>
          <%= render CardComponent.new(extra_classes: "mb-4") do |card| %>
            <% card.with_header do %>
              <%= t(".attached_documents") %>
            <% end %>
            <ul>
              <% @server.documents.each do |doc| %>
                <%- next unless doc.document.present? %>
                <li>
                  <%= link_to(doc.document.metadata["filename"], doc.document_url, { target: :_blank })  %>
                </li>
              <% end %>
            </ul>
          <% end %>
        <% end %>
      </div>

      <div class="col-12">
        <%= render CardComponent.new do |card| %>
          <% card.with_header do %>
            <%= t(".glpi_data") %>
          <% end %>
          <%
            begin
              Timeout.timeout(3) do
                client = GlpiClient.new
                computer = client.computer(serial: Rails.env.production? ? @server.numero : "AZERTY") %>
              <% if computer.present? %>
                <dl class="show-page_dl d-grid row-gap-2 mb-0">
                  <dt class="pb-2"><%= t("glpi.computer.name") %></dt>
                  <dd class="mb-0 pb-2 ps-3"><%= computer.name %></dd>

                  <dt class="pb-2"><%= t("glpi.computer.id") %></dt>
                  <dd class="mb-0 pb-2 ps-3"><%= computer.id %></dd>

                  <dt class="pb-2"><%= t("glpi.computer.serial") %></dt>
                  <dd class="mb-0 pb-2 ps-3"><%= computer.serial %></dd>

                  <dt class="pb-2"><%= t("glpi.computer.contact") %></dt>
                  <dd class="mb-0 pb-2 ps-3"><%= computer.contact %></dd>
                </dl>
                <dl class="show-page_dl d-grid row-gap-2 pt-3 border-top mb-0">
                  <dt class="pb-2"><%= t("glpi.computer.disks_count") %></dt>
                  <dd class="mb-0 pb-2 ps-3"><%= computer.hard_drives&.size %></dd>

                  <dt class="pb-2"><%= t("glpi.computer.disks_capacity") %></dt>
                  <dd class="mb-0 pb-2 ps-3"><%= number_to_human_size(computer.hard_drives_total_capacity * 1048576) %></dd>

                  <dt class="pb-2"><%= t("glpi.computer.memories_count") %></dt>
                  <dd class="mb-0 pb-2 ps-3"><%= computer.memories&.size %></dd>

                  <dt class="pb-2"><%= t("glpi.computer.memories_total") %></dt>
                  <dd class="mb-0 pb-2 ps-3"><%= number_to_human_size(computer.memories_total_size * 1048576) %></dd>

                  <dt class="pb-2"><%= t("glpi.computer.cpus") %></dt>
                  <dd class="mb-0 pb-2 ps-3">
                    <%= computer.processors.group_by { |p| p[1]["designation"] }
                                           .map { |designation, processors| "#{processors.size} x #{designation}" }
                                           .join(", ") %>
                  </dd>
                </dl>
                <% card.with_footer do %>
                  <%= link_to t(".glpi_visit_page"),
                              "#{Rails.application.credentials.glpi_url}/front/computer.form.php?id=#{computer.id}",
                              target: :_blank %>
                <% end %>
              <% else %>
                <%= t(".no_match_serial", serial: @server.numero) %>
              <% end %>
            <% end
                rescue Timeout::Error => e
                Rails.logger.warn "WARNING: couldn't get GLPI data because the operation timed out"
                rescue Exception => e
                Rails.logger.warn "WARNING: couldn't get GLPI data because of an error: #{e.message}" %>
            <%= t(".glpi_connection_error") %> : <pre><code><%= e&.message.to_s %></code></pre>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>

  <%= render ChangelogEntries::ObjectListComponent.new(@server) %>
</div>

<%= render "ports/modal_edit_port" %>
