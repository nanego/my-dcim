<div class="row gy-4">
  <div class="col-12 col-lg-6">
    <%= render FormErrorsComponent.new(@move) %>

    <%= form_for(@move, html: { class: "bg-body-tertiary p-4 rounded border moves_form server_form_fields",
                                role: "form"
                              }) do |f| %>
      <div class="row g-3">
        <fieldset class="col-12">
          <%= f.hidden_field :moveable_type, value: @move.moveable_type %>
          <%= f.label :moveable_id, class: "form-label" %>
          <%= f.select :moveable_id,
                      grouped_options_for_select(@all_servers_per_frame, { selected: @move.moveable_id }),
                      { include_blank: true },
                      {
                        onchange: "select_server(this.value);",
                        class: "form-select",
                        data: { controller: "select", select_options_value: { maxOptions: nil } }
                      }
          %>
        </fieldset>

        <div class="col-12 mt-0">
          <div id="servers_server_container"
               class="py-3 mt-4 rounded border d-none bg-body overflow-scroll no-decoration-link"></div>
        </div>

        <div id="initial_bay" class="col-12 mt-4 d-none">
          <div class="col-12">
            <span><%= t(".initial_bay") %></span>
          </div>

          <div class="col-12">
            <input id="initial_bay_name" type="text" class="form-control" disabled></input>
          </div>
        </div>

        <fieldset class="col-12 mt-4">
          <%= f.label :frame_id, class: "form-label" %>
          <%= f.select :frame_id,
                       grouped_options_for_select(@all_frames_per_room, { selected: @move.frame_id }),
                       { include_blank: true },
                       {
                         onchange: "select_frame(this.value, 'front')",
                         class: "form-select",
                         data: { controller: "select", select_options_value: { maxOptions: nil } }
                       }
          %>
        </fieldset>

        <div id="bay_size_container" class="col-12 mt-0">
          <% if @move.frame %>
            <%= render partial: "moves/select_bay_position", locals: { f: , move: @move, frame_size: @move.frame.u } %>
          <% end %>
        </div>

        <fieldset class="col-12 mt-4">
          <%= f.label :remove_connections, class: "form-label" %>
          <%= f.select :remove_connections,
                       options_for_select(["Oui", "Non"], { selected: "Non" }),
                       {},
                       class: "form-select"
          %>
        </fieldset>

        <div class="col-12 mt-4 text-end">
          <%= f.submit class: "btn btn-primary" %>
        </div>
      </div>
    <% end %>
  </div>

  <div class="col-12 col-lg-6" id="frame">
    <% if @move.persisted? %>
        <% @move.moveable.position = @move.position %>
        <%= render partial: "frames/show_frame",
                   locals: {
                     frame: @move.frame,
                     servers: (@move.frame.servers.where.not(id: @move.moveable) | [@move.moveable]).sort_by { |server|
                       server.position.present? ? server.position : 0
                     }.reverse,
                     settings: Frame::DEFAULT_SETTINGS.merge({ min_height: 27 }),
                     view_type: "front",
                     editable: false,
                     highlighted_servers: [@move.moveable],
                     clickable_lines: true
                   }
        %>
    <% end %>
  </div>
</div>

<script>
$(document).ready(function(){
    loadPaletteColorPicker('[name="move[color]"]');
    select_server(<%= @move.moveable_id %>);
});

function select_server(server_id){
    if(server_id != undefined && server_id != ''){
      console.log("Selected server : " + JSON.stringify(server_id));
      $.ajax({
        method: "GET",
        url: "<%= load_server_moves_path %>",
        data: { server_id: server_id }
      }).done(function(){
        document.getElementById("servers_server_container").classList.remove("d-none");
        display_initial_bay();
      });
    } else {
      document.getElementById("servers_server_container").classList.add("d-none");
      document.getElementById("initial_bay").classList.add("d-none");
    }
}

function select_frame(frame_id, view){
    if(frame_id != undefined && frame_id != ''){
      console.log("Selected frame : " + JSON.stringify(frame_id));
      $.ajax({
        method: "GET",
        url: "<%= load_frame_moves_path %>",
        data: { frame_id: frame_id, view: view }
      }).done(function(){
        // $('#frame').show();
      });
    } else {
      $('#frame').html('');
    }
}

function display_initial_bay() {
  var label = $('#move_moveable_id :selected').data("frameName");

  document.getElementById("initial_bay").classList.remove("d-none");
  document.getElementById("initial_bay_name").value = label
}

$("#frame").on("click", ".position_in_frame", function(e) {
  $("#move_position").val(e.target.title).change();
});
</script>
