<div class="moves_form">

  <%= form_for(@move, html: { class: "form-horizontal moves_form server_form_fields col-sm-6", role: "form" }) do |f| %>
    <% if @move.errors.any? %>
      <div class="alert alert-danger alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4><%= pluralize(@move.errors.count, "erreur", "erreurs") %> lors de la sauvegarde :</h4>

        <ul>
        <% @move.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
        </ul>
      </div>
    <% end %>

    <div class="form-group row">

      <%= f.hidden_field :moveable_type, value: @move.moveable_type %>

      <div class="col-sm-6"  style="text-align: right;">
        <span>Matériel à déplacer</span>
      </div>
      <div class="col-sm-6">
        <%= f.select :moveable_id,
                       grouped_options_for_select(@all_servers_per_frame, { :selected => @move.moveable_id }),
                       {include_blank: true},
                       {onchange: "select_server(this.value); display_initial_bay();",
                       style: 'max-width: 185px;'}
        %>
      </div>

      <div class="col-sm-12" id="initial_bay">
        <div class="col-sm-6"  style="text-align: right;">
          <span>Baie de départ</span>
        </div>

        <div class="col-sm-6">
          <span id="initial_bay_name"></span>
        </div>
      </div>

      <div class="col-sm-12 server_container" id="servers_server_container"></div>

      <div class="col-sm-6"  style="text-align: right;">
        <span>Baie de destination</span>
      </div>
      <div class="col-sm-6">
        <%= f.select :frame_id,
                       grouped_options_for_select(@all_frames_per_room, { :selected => @move.frame_id }),
                       {include_blank: true},
                       {onchange: 'select_frame(this.value, "front")',
                       style: 'max-width: 185px;'}
        %>
      </div>

      <div class="col-sm-12" id="bay_size_container">
        <%= f.hidden_field :position, value: "" %>
      </div>

      <div class="col-sm-6"  style="text-align: right;">
        <span>Supprimer toutes les connexions vers ce matériel ?</span>
      </div>
      <div class="col-sm-6">
        <%= f.select :remove_connections,
                     options_for_select(['Oui', 'Non'], { :selected => 'Non' }),
                     {include_blank: false},
                     {style: 'max-width: 185px;'}
        %>
      </div>

      <div class="col-sm-offset-6 col-sm-6">
        <%= f.submit 'Enregistrer', class: "btn btn-primary" %>
      </div>
    </div>
  <% end %>

  <div class="col-sm-6" id="frame">
    <% if @move.persisted? %>
        <% @move.moveable.position = @move.position %>

        <%= render partial: 'frames/show_frame', locals: {frame: @move.frame,
                                                          servers: (@move.frame.servers | [@move.moveable]).sort_by { |server| server.position.present? ? server.position : 0}.reverse,
                                                          settings: Frame.settings.merge({:min_height => 27 }),
                                                          view_type: 'front',
                                                          editable: false,
                                                          highlighted_servers: [@move.moveable]
        } %>
    <% end %>
  </div>
</div>

<script>
    $(document).ready(function(){
        loadPaletteColorPicker('[name="move[color]"]');
        $('.server_container').hide();
        $('#initial_bay').hide();
        select_server(<%= @move.moveable_id %>);
    });

    function select_server(server_id){
        if(server_id != undefined && server_id != ''){
            console.log("Selected server : " + JSON.stringify(server_id));
            $.ajax({
                method: "GET",
                url: "<%= load_server_moves_path %>",
                data: { server_id: server_id }
            }).done(function(){
                $('.server_container').show();
            });
        }else{
            $('.server_container').hide();
        }
    }

    function select_frame(frame_id, view){
        if(frame_id != undefined && frame_id != ''){
            console.log("Selected frame : " + JSON.stringify(frame_id));
            $.ajax({
                method: "GET",
                url: "<%= load_frame_moves_path %>",
                data: { frame_id: frame_id, view: view }
            }).done(function(){
                // $('#frame').show();
            });
        }else{
            $('#frame').html('');
        }
    }

    function display_initial_bay() {
      var label=$('#move_moveable_id :selected').parent().attr('label');
      $('#initial_bay').show();
      $('#initial_bay_name').text(label);
    }

    $("#frame").on("click", ".position_in_frame", function(e) {
      $("#move_position").val(e.target.title).change()
    });

</script>
