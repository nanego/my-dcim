<% remote ||= false %>

<div class="connection_form p-4">
  <%= form_for("connection", url: connections_update_path,
                             remote: remote,
                             html: { class: "col-12 mx-auto", role: :form }) do |f| %>
    <%= render CardComponent.new(extra_classes: "bg-body-tertiary") do |card| %>
      <% card.with_header do %>
        <div class="d-flex">
          <span id="port_status"></span>
          <% if remote %>
            <button type="button" class="btn-close ms-auto" data-bs-dismiss="modal"
                                                            aria-label="<%= t("action.close") %>"></button>
          <% end %>
        </div>
      <% end %>

      <div class="col-12">
        <%= f.label Connection.human_attribute_name(:from_port_id), class: "form-label" %>
        <%= render CardComponent.new do |card| %>
          <div id="back_departure_server" class="back_server d-flex flex-row-reverse flex-wrap no-decoration-link">
            <%= render partial: "servers/draw_server_compact",
                        locals: { server: @from_server, selected_port: @from_port } %>
          </div>
          <%= f.hidden_field :from_port_id, value: @from_port.id %>
        <% end %>
      </div>

      <div class="col-12 mt-4" data-controller="reveal" data-reveal-hidden-class="d-none">
        <%= f.label Connection.human_attribute_name(:to_port_id), class: "form-label" %>
        <%= render CardComponent.new do |card| %>
          <% card.with_header do %>
            <div class="d-flex justify-content-between" id="select_destination_bay">
              <span id="restricted_destinations" class="w-50" data-reveal-target="item">
                <%= select_tag "to_server",
                              grouped_options_for_select(
                                @possible_destination_servers, { selected: @to_server.try(:id) }
                              ),
                              include_blank: true,
                              class: "form-select",
                              data: { controller: "select" },
                              onchange: "select_destination_server(0)"
                %>
              </span>
              <span id="all_destinations" class="d-none w-50" data-reveal-target="item">
                <%= select_tag "to_server",
                              grouped_options_for_select(@all_servers_per_frame, { selected: @to_server.try(:id) }),
                              include_blank: true,
                              class: "form-select",
                              data: { controller: "select" },
                              onchange: "select_destination_server(1)"
                %>
              </span>
              <button class="btn btn-link btn-sm me-auto" data-action="click->reveal#toggle" type="button">
                <span data-reveal-target="item">
                  <%= t(".action.show_more_bay") %>
                </span>
                <span data-reveal-target="item" class="d-none">
                  <%= t(".action.show_less_bay") %>
                </span>
              </button>
            </div>
          <% end %>
          <div id="back_destination_server" class="back_server d-flex flex-row-reverse flex-wrap no-decoration-link">
            <%= render(partial: "servers/draw_server_compact",
                       locals: { server: @to_server, selected_port: @to_port }) if @to_server %>
          </div>
          <%= f.hidden_field :to_port_id, value: @to_port.try(:id) %>
        <% end %>
      </div>

      <fieldset class="col-12 mt-4">
        <%= f.label Port.human_attribute_name(:color), class: "form-label" %>
        <%= f.hidden_field :color, value: @from_port.cable.try(:color) %>
      </fieldset>

      <fieldset class="col-12 mt-4">
        <%= f.label Port.human_attribute_name(:cablename), class: "form-label" %>
        <%= f.text_field :cablename, class: "form-control", value: @from_port.cable.try(:name) %>
      </fieldset>

      <fieldset class="col-12 mt-4">
        <%= f.label Port.human_attribute_name(:vlans), class: "form-label" %>
        <%= f.text_field :vlans, class: "form-control", value: @from_port.vlans %>
      </fieldset>

      <div class="col-12 mt-4">
        <fieldset class="form-check">
          <%= f.check_box :special_case, class: "form-check-input", checked: @from_port.cable.try(:special_case) %>
          <%= f.label Cable.human_attribute_name(:special_case), class: "form-check-label" %>
        </fieldset>
      </div>

      <fieldset class="col-12 mt-4">
        <%= f.label Cable.human_attribute_name(:comments), class: "form-label" %>
        <%= f.text_field :comments, class: "form-control", value: @from_port.cable.try(:comments) %>
      </fieldset>
    <% end %>

    <div class="col-12 py-4 mt-4 text-end sticky-bottom bg-body-tertiary border-top">
      <%- if remote %>
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
          <%= t("action.cancel") %>
        </button>
      <% else %>
        <%= link_to t("action.cancel"), connections_path, class: "btn btn-outline-secondary" %>
      <% end %>

      <%= f.submit t("action.edit"), class: "btn btn-primary" %>
    </div>

    <% if @cable && remote %>
      <div class="col-12 mt-4 border-top pt-4 text-center">
        <h5 class="mb-4"><%= t(".delete_title") %></h5>
        <%= link_to cable_path(id: @cable.id, redirect_to_port_id: @from_port.id),
                    method: :delete,
                    data: { confirm: t(".action.delete_confirmation") },
                    class: "btn btn-danger" do %>
          <span class="bi bi-trash"></span>
          <span class="ms-1"><%= t("action.delete") %></span>
        <% end %>
      </div>
    <% end %>
  <% end %>
</div>

  <script>
  function select_destination_server(see_all) {
      if (see_all == 1) {
          selected_server = $("#all_destinations select[name='to_server']").val();
      } else {
          selected_server = $("#restricted_destinations select[name='to_server']").val();
      }

      $.ajax({
          method: "POST",
          url: "<%= connections_update_destination_server_path %>",
          data: { server_id: selected_server }
      }).done(function () {
          select_destination_port($('input[name="connection[to_port_id]"]').val());
      });
  }

  function updateConnectionStateMessage(frame, cablename) {
      url = "https://supervision-reseau-ac.cs.e2.rie.gouv.fr/macip/port_status.php?baie=" + frame + "&cable=" + cablename;

      $.ajax(url, {
          dataType: 'json', jsonp: false, beforeSend: function (xhr) {
              xhr.withCredentials = true;
          }
      })
          .done(function (data) {
              var ratio = data['speed'] / data['maxspeed'];
              var badge_class = "";
              switch (ratio) {
                  case 1:
                      badge_class = "success";
                      break;
                  case 0:
                      badge_class = "danger";
                      break;
                  default:
                      badge_class = "warning";
              }
              var badge = " <span class=\"badge rounded-pill text-bg-" + badge_class + "\">" + data['speed'] + ' / ' + data['maxspeed'] + "</span>";
              var value = "<b>Etat actuel de la connexion " + frame + " cable " + cablename + " : </b> " + badge;
              $("<span/>", {
                  "class": 'state_' + ratio,
                  html: value
              }).appendTo("#port_status");
          })
          .fail(function (data) {
              console.log("Error in ajax call");
              var badge = " <span class=\"badge rounded-pill text-bg-danger\">Pas d'informations. Script php : " + data['statusText'] + "</span>";
              var value = "<b>Etat actuel de la connexion " + frame + " cable " + cablename + " : </b> " + badge;
              $("<span/>", {
                  "class": 'error',
                  html: value
              }).appendTo("#port_status");
          });
  }

  function select_destination_port(port_id) {
      var selected_ports = $("#back_destination_server #" + port_id);
      selected_ports.closest("table").find("span.selected").removeClass("selected");
      selected_ports.closest("span").addClass("selected");
      var server_name = $("#back_destination_server .server_name").text();
      var component_name = selected_ports.closest("td").find("span:first").data("composant-name");
      var position = selected_ports.data("position");
      $('#to_port').val(server_name + " - Slot: " + component_name + " - Position : " + position);
      $('[name="connection[to_port_id]"]').val(port_id);
      selected_ports.closest("form").find('input[type="submit"]').prop('disabled', false);
  }

  $(document).ready(function () {
      loadPaletteColorPicker('[name="connection[color]"]');

      updateConnectionStateMessage("<%= @frame.name %>", "<%=@from_port.cable.try(:name)%>");

      $("#back_departure_server").on('click', 'a.port', function (e) {
          e.preventDefault();
      });
      $("#back_destination_server").on('click', 'a.port', function (e) {
          e.preventDefault();
          select_destination_port(e.target.id);
      });
  });
  </script>
